"""remade the group model and its relations for a proper implementation of the many-to-many relationship

Revision ID: 62c8069043d3
Revises: be5a603e248e
Create Date: 2025-05-22 08:41:55.413929

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '62c8069043d3'
down_revision: Union[str, None] = 'be5a603e248e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_table('grouppermissions',
    sa.Column('groupid', sa.UUID(), nullable=False),
    sa.Column('permissionscopeid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['groupid'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['permissionscopeid'], ['permissionscopes.id'], ),
    sa.PrimaryKeyConstraint('groupid', 'permissionscopeid')
    )
    op.create_table('groupusers',
    sa.Column('groupid', sa.UUID(), nullable=False),
    sa.Column('userid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['groupid'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('groupid', 'userid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('groupusers')
    op.drop_table('grouppermissions')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    # ### end Alembic commands ###
