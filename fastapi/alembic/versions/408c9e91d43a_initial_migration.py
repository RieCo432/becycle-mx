"""Initial Migration

Revision ID: 408c9e91d43a
Revises: 
Create Date: 2024-12-08 15:16:31.295750

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import bcrypt


# revision identifiers, used by Alembic.
revision: str = '408c9e91d43a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    address_table = op.create_table('address',
    sa.Column('id', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('number', sa.Text(), nullable=False),
    sa.Column('street', sa.Text(), nullable=False),
    sa.Column('postcode', sa.Text(), nullable=False),
    sa.Column('city', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_id'), 'address', ['id'], unique=False)
    op.bulk_insert(address_table,
                   [{"number": "1",
                     "street": "DEFAULT STREET",
                     "postcode": "AB12 3AB",
                     "city": "Aberdeen"}])

    op.create_table('appointmentconcurrencylimits',
    sa.Column('aftertime', sa.Time(), nullable=False),
    sa.Column('maxconcurrent', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('aftertime')
    )
    op.create_index(op.f('ix_appointmentconcurrencylimits_aftertime'), 'appointmentconcurrencylimits', ['aftertime'], unique=False)
    op.create_table('appointmentgeneralsettings',
    sa.Column('id', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('openingdays', sa.ARRAY(sa.Integer()), nullable=False),
    sa.Column('minbookahead', sa.Integer(), nullable=False),
    sa.Column('maxbookahead', sa.Integer(), nullable=False),
    sa.Column('slotduration', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointmentgeneralsettings_id'), 'appointmentgeneralsettings', ['id'], unique=False)
    op.create_table('appointmenttypes',
    sa.Column('id', sa.String(length=5), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('TRUE'), nullable=False),
    sa.Column('title', sa.String(length=40), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointmenttypes_id'), 'appointmenttypes', ['id'], unique=False)
    op.create_table('bikes',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('make', sa.String(length=40), nullable=False),
    sa.Column('model', sa.String(length=40), nullable=False),
    sa.Column('colour', sa.String(length=40), nullable=False),
    sa.Column('decals', sa.String(length=40), nullable=True),
    sa.Column('serialnumber', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bikes_id'), 'bikes', ['id'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('firstname', sa.String(length=40), nullable=False),
    sa.Column('lastname', sa.String(length=40), nullable=False),
    sa.Column('emailaddress', sa.String(length=255), nullable=False),
    sa.Column('prebecyclesurveycompleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('peribecyclesurveycompleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('postbecyclesurveycompleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_firstname'), 'clients', ['firstname'], unique=False)
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_index(op.f('ix_clients_lastname'), 'clients', ['lastname'], unique=False)
    op.create_table('clientstemp',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('firstname', sa.String(length=40), nullable=False),
    sa.Column('lastname', sa.String(length=40), nullable=False),
    sa.Column('emailaddress', sa.String(length=255), nullable=False),
    sa.Column('verificationcode', sa.String(length=6), server_default=sa.text("TO_CHAR(FLOOR(RANDOM()*1000000), 'fm000000')"), nullable=False),
    sa.Column('expirationdatetime', sa.DateTime(), server_default=sa.text("(current_timestamp at time zone 'utc' + make_interval(mins => 1440))"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('emailaddress')
    )
    op.create_index(op.f('ix_clientstemp_firstname'), 'clientstemp', ['firstname'], unique=False)
    op.create_index(op.f('ix_clientstemp_id'), 'clientstemp', ['id'], unique=False)
    op.create_index(op.f('ix_clientstemp_lastname'), 'clientstemp', ['lastname'], unique=False)
    op.create_table('closeddays',
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('note', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('date')
    )
    op.create_index(op.f('ix_closeddays_date'), 'closeddays', ['date'], unique=False)
    op.create_table('contracttypes',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expenseReceipts',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('content', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expenseReceipts_id'), 'expenseReceipts', ['id'], unique=False)
    op.create_table('expensetypes',
    sa.Column('id', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('peribecyclesurvey',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('datetime', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('servicesatisfactiongetbike', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('servicesatisfactionfixbike', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('servicesatisfactionlearn', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('roadsgreat', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('roadslight', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('roadspotholes', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('roadsrubbish', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('roadsparking', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('roadsdark', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('userssafe', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('usersbusesunsafe', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('userscarsunsafe', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('userstrucksunsafe', sa.Boolean(), server_default=sa.text('FALSE'), nullable=True),
    sa.Column('userstaxisunsafe', sa.Boolean(), server_default=sa.text('FALSE'), nullable=True),
    sa.Column('userscyclistsunsafe', sa.Boolean(), server_default=sa.text('FALSE'), nullable=True),
    sa.Column('userspedestriansunsafe', sa.Boolean(), server_default=sa.text('FALSE'), nullable=True),
    sa.Column('routesroads', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('routespavements', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('routesoffroad', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('accidentsnearmisses', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('accidentscontact', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('harassmentexperienced', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('harassmentsuggestions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_peribecyclesurvey_id'), 'peribecyclesurvey', ['id'], unique=False)
    op.create_table('postbecyclesurvey',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('datetime', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('servicesatisfactiongetbike', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('servicesatisfactionfixbike', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('servicesatisfactionlearn', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('reasonstoppedcycling', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('reasonleavingaberdeen', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('issuesafety', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('issuemoney', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('issuetime', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('issuesweating', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('issuecomfort', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('issuedistance', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('issueother', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('improvementnone', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('improvementcyclingpaths', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('improvementlights', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('improvementsurface', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('improvementcleaner', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('improvementother', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('alternativeownbike', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('alternativesharefriendsfamily', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('alternativeanotherbecycle', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('alternativeotherrental', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_postbecyclesurvey_id'), 'postbecyclesurvey', ['id'], unique=False)
    op.create_table('prebecyclesurvey',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('datetime', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('hurdlesafety', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('hurdlemoney', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('hurdletime', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('hurdlesweating', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('hurdlecomfort', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('hurdledistance', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('hurdleother', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('motivationmoney', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('motivationhealth', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('motivationenvironmental', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('motivationother', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('considerednewonline', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('considerednewshop', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('consideredused', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('consideredlendingprivate', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('consideredlendingbecycle', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('consideredother', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('trainingexperience', sa.Integer(), nullable=False),
    sa.Column('trainingformal', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('trainingconfidence', sa.Integer(), nullable=False),
    sa.Column('trainingrules', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('trainingdriver', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('interestmaintenancedesired', sa.Integer(), nullable=False),
    sa.Column('interestmaintenancecurrent', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prebecyclesurvey_id'), 'prebecyclesurvey', ['id'], unique=False)
    op.create_table('roadsegmentreporttypes',
    sa.Column('id', sa.String(length=5), nullable=False),
    sa.Column('title', sa.String(length=40), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('scoremodifier', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roadsegmentreporttypes_id'), 'roadsegmentreporttypes', ['id'], unique=False)
    op.create_table('roadsegments',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('fromlatitude', sa.Float(), nullable=False),
    sa.Column('fromlongitude', sa.Float(), nullable=False),
    sa.Column('tolatitude', sa.Float(), nullable=False),
    sa.Column('tolongitude', sa.Float(), nullable=False),
    sa.Column('roadclassification', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('roadfunction', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('formofway', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('name', sa.Text(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('length', sa.Integer(), server_default=sa.text('NULL'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roadsegments_fromlatitude'), 'roadsegments', ['fromlatitude'], unique=False)
    op.create_index(op.f('ix_roadsegments_fromlongitude'), 'roadsegments', ['fromlongitude'], unique=False)
    op.create_index(op.f('ix_roadsegments_id'), 'roadsegments', ['id'], unique=False)
    op.create_index(op.f('ix_roadsegments_length'), 'roadsegments', ['length'], unique=False)
    op.create_index(op.f('ix_roadsegments_tolatitude'), 'roadsegments', ['tolatitude'], unique=False)
    op.create_index(op.f('ix_roadsegments_tolongitude'), 'roadsegments', ['tolongitude'], unique=False)
    op.create_table('userphotos',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('content', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userphotos_id'), 'userphotos', ['id'], unique=False)
    users_table = op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('password', sa.String(length=60), nullable=False),
    sa.Column('pin', sa.String(length=60), nullable=True),
    sa.Column('admin', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('depositbearer', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('rentalchecker', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('appointmentmanager', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('treasurer', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('softdeleted', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_password'), 'users', ['password'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)

    op.bulk_insert(users_table,
                   [{"username": "admin",
                     "password": bcrypt.hashpw("password", bcrypt.gensalt()),
                     "pin": bcrypt.hashpw("0000", bcrypt.gensalt()),
                     "admin": True,
                     "depositbearer": True,
                     "rentalchecker": True,
                     "appointmentmanager": True,
                     "treasurer": True,}])

    op.create_table('appointments',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('clientid', sa.UUID(), nullable=False),
    sa.Column('typeid', sa.String(length=5), nullable=False),
    sa.Column('startdatetime', sa.DateTime(), nullable=False),
    sa.Column('enddatetime', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('cancelled', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('remindersent', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.ForeignKeyConstraint(['clientid'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['typeid'], ['appointmenttypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_table('clientlogins',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('clientid', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=6), server_default=sa.text("TO_CHAR(FLOOR(RANDOM()*1000000), 'fm000000')"), nullable=False),
    sa.Column('expirationdatetime', sa.DateTime(), server_default=sa.text("(current_timestamp at time zone 'utc' + make_interval(mins => 60))"), nullable=False),
    sa.ForeignKeyConstraint(['clientid'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clientlogins_id'), 'clientlogins', ['id'], unique=False)
    op.create_table('contracts',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('clientid', sa.UUID(), nullable=False),
    sa.Column('bikeid', sa.UUID(), nullable=False),
    sa.Column('workinguserid', sa.UUID(), nullable=False),
    sa.Column('checkinguserid', sa.UUID(), nullable=False),
    sa.Column('depositcollectinguserid', sa.UUID(), nullable=False),
    sa.Column('returnacceptinguserid', sa.UUID(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('depositreturninguserid', sa.UUID(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('startdate', sa.Date(), server_default=sa.text("(current_date at time zone 'utc')"), nullable=False),
    sa.Column('enddate', sa.Date(), server_default=sa.text("(current_date at time zone 'utc' + make_interval(months => 6))"), nullable=False),
    sa.Column('returneddate', sa.Date(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('depositamountcollected', sa.Integer(), nullable=False),
    sa.Column('depositamountreturned', sa.Integer(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('conditionofbike', sa.String(length=20), nullable=False),
    sa.Column('contracttype', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('detailssent', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('expiryremindersent', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.Column('returndetailssent', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.ForeignKeyConstraint(['bikeid'], ['bikes.id'], ),
    sa.ForeignKeyConstraint(['checkinguserid'], ['users.id'], ),
    sa.ForeignKeyConstraint(['clientid'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['depositcollectinguserid'], ['users.id'], ),
    sa.ForeignKeyConstraint(['depositreturninguserid'], ['users.id'], ),
    sa.ForeignKeyConstraint(['returnacceptinguserid'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workinguserid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contracts_id'), 'contracts', ['id'], unique=False)
    op.create_table('depositexchanges',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('fromuserid', sa.UUID(), nullable=True),
    sa.Column('touserid', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), server_default=sa.text("(current_date at time zone 'utc')"), nullable=False),
    sa.ForeignKeyConstraint(['fromuserid'], ['users.id'], ),
    sa.ForeignKeyConstraint(['touserid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_depositexchanges_id'), 'depositexchanges', ['id'], unique=False)
    op.create_table('detectedpotentialbikeduplicates',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('bike1id', sa.UUID(), nullable=False),
    sa.Column('bike2id', sa.UUID(), nullable=False),
    sa.Column('similarityscore', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('ignore', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.ForeignKeyConstraint(['bike1id'], ['bikes.id'], ),
    sa.ForeignKeyConstraint(['bike2id'], ['bikes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detectedpotentialbikeduplicates_id'), 'detectedpotentialbikeduplicates', ['id'], unique=False)
    op.create_table('detectedpotentialclientduplicates',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('client1id', sa.UUID(), nullable=False),
    sa.Column('client2id', sa.UUID(), nullable=False),
    sa.Column('similarityscore', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('ignore', sa.Boolean(), server_default=sa.text('FALSE'), nullable=False),
    sa.ForeignKeyConstraint(['client1id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['client2id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detectedpotentialclientduplicates_id'), 'detectedpotentialclientduplicates', ['id'], unique=False)
    op.create_table('expenses',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('expenseuserid', sa.UUID(), nullable=False),
    sa.Column('treasureruserid', sa.UUID(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('expensedate', sa.Date(), nullable=False),
    sa.Column('transferdate', sa.Date(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('receiptfileid', sa.UUID(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('receiptcontenttype', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['expenseuserid'], ['users.id'], ),
    sa.ForeignKeyConstraint(['receiptfileid'], ['expenseReceipts.id'], ),
    sa.ForeignKeyConstraint(['treasureruserid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expenses_id'), 'expenses', ['id'], unique=False)
    op.create_table('roadsegmentreports',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('datetime', sa.DateTime(), server_default=sa.text('current_timestamp'), nullable=False),
    sa.Column('roadsegmentid', sa.UUID(), nullable=False),
    sa.Column('typeid', sa.String(length=5), nullable=False),
    sa.ForeignKeyConstraint(['roadsegmentid'], ['roadsegments.id'], ),
    sa.ForeignKeyConstraint(['typeid'], ['roadsegmentreporttypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roadsegmentreports_id'), 'roadsegmentreports', ['id'], unique=False)
    op.create_table('userpresentationcards',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('userid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('bio', sa.Text(), nullable=False),
    sa.Column('photofileid', sa.UUID(), server_default=sa.text('NULL'), nullable=True),
    sa.Column('photocontenttype', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['photofileid'], ['userphotos.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userpresentationcards_bio'), 'userpresentationcards', ['bio'], unique=False)
    op.create_index(op.f('ix_userpresentationcards_id'), 'userpresentationcards', ['id'], unique=False)
    op.create_index(op.f('ix_userpresentationcards_name'), 'userpresentationcards', ['name'], unique=True)
    op.create_table('papercontracts',
    sa.Column('id', sa.String(length=24), nullable=False),
    sa.Column('contractid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['contractid'], ['contracts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_papercontracts_id'), 'papercontracts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_papercontracts_id'), table_name='papercontracts')
    op.drop_table('papercontracts')
    op.drop_index(op.f('ix_userpresentationcards_name'), table_name='userpresentationcards')
    op.drop_index(op.f('ix_userpresentationcards_id'), table_name='userpresentationcards')
    op.drop_index(op.f('ix_userpresentationcards_bio'), table_name='userpresentationcards')
    op.drop_table('userpresentationcards')
    op.drop_index(op.f('ix_roadsegmentreports_id'), table_name='roadsegmentreports')
    op.drop_table('roadsegmentreports')
    op.drop_index(op.f('ix_expenses_id'), table_name='expenses')
    op.drop_table('expenses')
    op.drop_index(op.f('ix_detectedpotentialclientduplicates_id'), table_name='detectedpotentialclientduplicates')
    op.drop_table('detectedpotentialclientduplicates')
    op.drop_index(op.f('ix_detectedpotentialbikeduplicates_id'), table_name='detectedpotentialbikeduplicates')
    op.drop_table('detectedpotentialbikeduplicates')
    op.drop_index(op.f('ix_depositexchanges_id'), table_name='depositexchanges')
    op.drop_table('depositexchanges')
    op.drop_index(op.f('ix_contracts_id'), table_name='contracts')
    op.drop_table('contracts')
    op.drop_index(op.f('ix_clientlogins_id'), table_name='clientlogins')
    op.drop_table('clientlogins')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_password'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_userphotos_id'), table_name='userphotos')
    op.drop_table('userphotos')
    op.drop_index(op.f('ix_roadsegments_tolongitude'), table_name='roadsegments')
    op.drop_index(op.f('ix_roadsegments_tolatitude'), table_name='roadsegments')
    op.drop_index(op.f('ix_roadsegments_length'), table_name='roadsegments')
    op.drop_index(op.f('ix_roadsegments_id'), table_name='roadsegments')
    op.drop_index(op.f('ix_roadsegments_fromlongitude'), table_name='roadsegments')
    op.drop_index(op.f('ix_roadsegments_fromlatitude'), table_name='roadsegments')
    op.drop_table('roadsegments')
    op.drop_index(op.f('ix_roadsegmentreporttypes_id'), table_name='roadsegmentreporttypes')
    op.drop_table('roadsegmentreporttypes')
    op.drop_index(op.f('ix_prebecyclesurvey_id'), table_name='prebecyclesurvey')
    op.drop_table('prebecyclesurvey')
    op.drop_index(op.f('ix_postbecyclesurvey_id'), table_name='postbecyclesurvey')
    op.drop_table('postbecyclesurvey')
    op.drop_index(op.f('ix_peribecyclesurvey_id'), table_name='peribecyclesurvey')
    op.drop_table('peribecyclesurvey')
    op.drop_table('expensetypes')
    op.drop_index(op.f('ix_expenseReceipts_id'), table_name='expenseReceipts')
    op.drop_table('expenseReceipts')
    op.drop_table('contracttypes')
    op.drop_index(op.f('ix_closeddays_date'), table_name='closeddays')
    op.drop_table('closeddays')
    op.drop_index(op.f('ix_clientstemp_lastname'), table_name='clientstemp')
    op.drop_index(op.f('ix_clientstemp_id'), table_name='clientstemp')
    op.drop_index(op.f('ix_clientstemp_firstname'), table_name='clientstemp')
    op.drop_table('clientstemp')
    op.drop_index(op.f('ix_clients_lastname'), table_name='clients')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_firstname'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_bikes_id'), table_name='bikes')
    op.drop_table('bikes')
    op.drop_index(op.f('ix_appointmenttypes_id'), table_name='appointmenttypes')
    op.drop_table('appointmenttypes')
    op.drop_index(op.f('ix_appointmentgeneralsettings_id'), table_name='appointmentgeneralsettings')
    op.drop_table('appointmentgeneralsettings')
    op.drop_index(op.f('ix_appointmentconcurrencylimits_aftertime'), table_name='appointmentconcurrencylimits')
    op.drop_table('appointmentconcurrencylimits')
    op.drop_index(op.f('ix_address_id'), table_name='address')
    op.drop_table('address')
    # ### end Alembic commands ###
